// Script para verificar valores dos produtos
import fetch from 'node-fetch';

const API_BASE = 'https://iestore.netlify.app/.netlify/functions/postgres';

async function checkProductValues() {
  try {
    console.log('üîç Verificando valores dos produtos...\n');
    
    const response = await fetch(`${API_BASE}?table=products`);
    const products = await response.json();
    
    console.log(`üì¶ Total de produtos: ${products.length}\n`);
    
    console.log('üìã Valores dos primeiros 5 produtos:');
    products.slice(0, 5).forEach((product, index) => {
      console.log(`${index + 1}. ${product.name}`);
      console.log(`   Custo unit√°rio: R$ ${product.cost}`);
      console.log(`   Pre√ßo unit√°rio: R$ ${product.unitPrice}`);
      console.log(`   Quantidade: ${product.quantity}`);
      console.log(`   Custo total (custo √ó qty): R$ ${(product.cost * product.quantity).toFixed(2)}`);
      console.log(`   Pre√ßo total (pre√ßo √ó qty): R$ ${(product.unitPrice * product.quantity).toFixed(2)}`);
      console.log(`   Margem: ${(((product.unitPrice - product.cost) / product.cost) * 100).toFixed(1)}%`);
      console.log('');
    });
    
    // Verificar se h√° produtos com valores muito altos (poss√≠vel soma incorreta)
    const highValueProducts = products.filter(p => p.unitPrice > 1000 || p.cost > 1000);
    if (highValueProducts.length > 0) {
      console.log('‚ö†Ô∏è Produtos com valores altos (poss√≠vel problema):');
      highValueProducts.forEach(p => {
        console.log(`- ${p.name}: Custo R$ ${p.cost}, Pre√ßo R$ ${p.unitPrice}`);
      });
    } else {
      console.log('‚úÖ Todos os produtos t√™m valores unit√°rios normais');
    }
    
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
  }
}

checkProductValues();
